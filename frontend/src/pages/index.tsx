import { useState, type ReactNode } from "react";
import { Button, Center, Flex, Image, Text, Title } from "@mantine/core";
import Head from "next/head";
import { useRecipe } from "@/hooks/useRecipe";

export default function Home(): ReactNode {
  const keywords = "肉料理 韓国料理 味濃いめ";
  const { data, isLoading, isError } = useRecipe(keywords);
  const [recipe, setRecipe] = useState<{
    name: string | undefined;
    imageUrl: string | undefined;
    text: string | undefined;
  }>({
    name: undefined,
    imageUrl: undefined,
    text: undefined,
  });

  const getRecipe = async () => {
    if (isLoading) {
      setRecipe({
        name: "Loading...",
        imageUrl: undefined,
        text: undefined,
      });
      return;
    }
    if (isError || !data) {
      setRecipe({
        name: "何の成果も！！得られませんでした！！",
        imageUrl: undefined,
        text: undefined,
      });
      return;
    }
    setRecipe(data);
    console.log(data);
  };

  return (
    <>
      <Head>
        <title>Qin App Team A</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Center maw={1000} mx="auto">
        <Flex
          mih={50}
          gap="xl"
          justify="center"
          align="center"
          direction="column"
          wrap="nowrap"
        >
          <Title
            sx={{ color: "red", transitionDuration: "1000ms" }}
          >{`Hello World ${recipe.name ? recipe.name : "たかし"}`}</Title>
          {recipe.imageUrl ? (
            <Image
              maw={240}
              mx="auto"
              radius="md"
              src={recipe.imageUrl}
              alt="recipe image"
            />
          ) : null}
          <Text
            variant="gradient"
            gradient={{ from: "indigo", to: "cyan", deg: 45 }}
            sx={{ fontFamily: "Greycliff CF, sans-serif" }}
            ta="center"
            fz="xl"
            fw={700}
          >
            {recipe.text ? recipe.text : "Indigo cyan gradient"}
          </Text>
          {/* <div
            style={{
              fontFamily: "Greycliff CF, sans-serif",
              textAlign: "center",
              fontSize: "1.25rem",
              fontWeight: 700,
              color: "indigo",
              background: "linear-gradient(45deg, indigo, cyan)",
              WebkitBackgroundClip: "text",
              WebkitTextFillColor: "transparent",
            }}
            dangerouslySetInnerHTML={{
              __html: recipe.details
                ? recipe.details.replace(/\n/g, "<br />")
                : "Indigo cyan gradient",
            }}
          /> */}
          <Button color="yellow" onClick={getRecipe}>
            コレシピ！！！
          </Button>
        </Flex>
      </Center>
    </>
  );
}
